# {{ dns_to_renew }}
#  - portainer
#  - cloud
#  - pihole
#  - nodered
#  - home

# Certificates
ssl_certificate /cert/fullchain.pem;
ssl_certificate_key /cert/privkey.pem;
# verify chain of trust of OCSP response using Root CA and Intermediate certs
ssl_trusted_certificate /cert/fullchain.pem;
# SSL supported protocols
ssl_protocols TLSv1.2 TLSv1.3;

server {
   listen 80;
   server_name *.{{ dns_to_renew }};
   rewrite ^ https://$host$request_uri? permanent;
}

# Portainer
server {
   listen 443 ssl http2;
   server_name portainer.{{ dns_to_renew }};
   include /etc/nginx/includes/proxy.conf;

   location / {
     proxy_pass  http://192.168.86.6:9000;
   }

   access_log off;
   error_log /var/log/nginx/error.log error;
}

# Node Red
server {
  listen 443 ssl http2;
  server_name nodered.{{ dns_to_renew }};

  location / {
    proxy_pass https://{{ node_red_container_ip }}:1880;

    #Defines the HTTP protocol version for proxying
    #by default it it set to 1.0.
    #For Websockets and keepalive connections you need to use the version 1.1
    proxy_http_version  1.1;

    #Sets conditions under which the response will not be taken from a cache.
    proxy_cache_bypass  $http_upgrade;

    #These header fields are required if your application is using Websockets
    proxy_set_header Upgrade $http_upgrade;

    #These header fields are required if your application is using Websockets
    proxy_set_header Connection "upgrade";

    #The $host variable in the following order of precedence contains:
    #hostname from the request line, or hostname from the Host request header field
    #or the server name matching a request.
    proxy_set_header Host $host;

    #Forwards the real visitor remote IP address to the proxied server
    proxy_set_header X-Real-IP $remote_addr;

    #A list containing the IP addresses of every server the client has been proxied through
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #When used inside an HTTPS server block, each HTTP response from the proxied server is rewritten to HTTPS.
    proxy_set_header X-Forwarded-Proto $scheme;

    #Defines the original host requested by the client.
    proxy_set_header X-Forwarded-Host $host;

    #Defines the original port requested by the client.
    proxy_set_header X-Forwarded-Port $server_port;
  }

}


# Pi-Hole
server {
  listen 443 ssl http2;
  server_name pihole.{{ dns_to_renew }};

  location / {
    proxy_pass http://{{ pi_hole_container_ip }}:8080/admin/;

    #Defines the HTTP protocol version for proxying
    #by default it it set to 1.0.
    #For Websockets and keepalive connections you need to use the version 1.1
    proxy_http_version  1.1;

    #Sets conditions under which the response will not be taken from a cache.
    proxy_cache_bypass  $http_upgrade;

    #These header fields are required if your application is using Websockets
    proxy_set_header Upgrade $http_upgrade;

    #These header fields are required if your application is using Websockets
    proxy_set_header Connection "upgrade";

    #The $host variable in the following order of precedence contains:
    #hostname from the request line, or hostname from the Host request header field
    #or the server name matching a request.
    proxy_set_header Host $host;

    #Forwards the real visitor remote IP address to the proxied server
    proxy_set_header X-Real-IP $remote_addr;

    #A list containing the IP addresses of every server the client has been proxied through
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #When used inside an HTTPS server block, each HTTP response from the proxied server is rewritten to HTTPS.
    proxy_set_header X-Forwarded-Proto $scheme;

    #Defines the original host requested by the client.
    proxy_set_header X-Forwarded-Host $host;

    #Defines the original port requested by the client.
    proxy_set_header X-Forwarded-Port $server_port;

    proxy_read_timeout 90;
  }

}


# Home Assistant
server {
   listen 443 ssl http2;
   server_name home.{{ dns_to_renew }};

   location / {
    proxy_pass https://{{ ha_container_ip }}:8123;

    #Defines the HTTP protocol version for proxying
    #by default it it set to 1.0.
    #For Websockets and keepalive connections you need to use the version 1.1
    proxy_http_version  1.1;

    proxy_buffering off;

    #Sets conditions under which the response will not be taken from a cache.
    proxy_cache_bypass  $http_upgrade;

    #These header fields are required if your application is using Websockets
    proxy_set_header Upgrade $http_upgrade;

    #These header fields are required if your application is using Websockets
    proxy_set_header Connection "upgrade";

    #The $host variable in the following order of precedence contains:
    #hostname from the request line, or hostname from the Host request header field
    #or the server name matching a request.
    proxy_set_header Host $host;

    #Forwards the real visitor remote IP address to the proxied server
    proxy_set_header X-Real-IP $remote_addr;

    #A list containing the IP addresses of every server the client has been proxied through
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #When used inside an HTTPS server block, each HTTP response from the proxied server is rewritten to HTTPS.
    proxy_set_header X-Forwarded-Proto $scheme;

    #Defines the original host requested by the client.
    proxy_set_header X-Forwarded-Host $host;

    #Defines the original port requested by the client.
    proxy_set_header X-Forwarded-Port $server_port;
   }

   access_log off;
   error_log /var/log/nginx/error.log error;
}
