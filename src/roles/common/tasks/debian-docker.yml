---
# Description
# Install docker with recommended way
- name: Remove old docker versions
  become: true
  apt:
    pkg:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent

- name: Install pre-requisites
  become: true
  apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - apt-transport-https
    state: latest
    update_cache: yes

- name: Add signing key
  become: true
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present

- name: Add Docker Repository
  become: true
  apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install Docker & dependencies
  become: true
  apt:
    name:
      - docker
      - docker.io
      - docker-compose
      - docker-registry
    state: latest
    update_cache: true

- name: Docker is running
  service:
    name: docker
    state: started

- name: Create docker data volume
  become: true
  file:
    path: "/docker"
    state: directory
    mode: "0755"
    owner: root
    recurse: yes

- name: Add user to docker group
  become: true
  user:
    name: "{{ user_name }}"
    groups: docker
    append: yes

- name: Find physical network adapter
  command: find /sys/class/net -type l -not -lname '*virtual*' -printf '%f\n'
  register: physical_interfaces_cmd
  changed_when: false
  check_mode: false

- name: Create IPVLAN L3 docker network
  become: true
  docker_network:
    name: port-freedom
    driver: ipvlan
    scope: global
    driver_options:
      parent: "{{ physical_interfaces_cmd.stdout_lines[0] }}"
      ipvlan_mode: l3
    ipam_config:
      - subnet: "{{ docker_network_ip_outside }}/24"
      - subnet: "{{ docker_network_ip_inside }}/24"

- name: Create custom bridge docker network
  become: true
  docker_network:
    name: curidge